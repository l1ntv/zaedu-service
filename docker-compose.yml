networks:
  backend:

services:
  postgres:
    container_name: zaEdu-postgres
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: zaEdu
    ports:
      - "5432:5432"
    volumes:
      - ../volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root -d zaEdu" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zaEdu-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: zaEdu-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - backend

  app:
    container_name: zaEdu-app
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .
    restart: no
    environment:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_URL: jdbc:postgresql://postgres:5432/zaEdu
      DB_SCHEMA: core
    ports:
      - "8080:8080"
    networks:
      - backend

  passport-validator:
    container_name: zaEdu-passport-validator
    build:
      context: ./passport-validator
    restart: no
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8081:8081"
    networks:
      - backend

  minio:
    image: minio/minio:latest
    container_name: zaEdu-minio
    command: server /minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - ../volumes/minio:/minio
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3